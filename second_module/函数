# 默认函数

def stu_register(name, age, course, country="CN"):
    print("registriation info....")
    print(name, age, country, course)
stu_register("Alex", 22, "python")
stu_register("jack", 22, "python", "Korean")
# 关键参数 关键参数不能在位置参数之前
stu_register("jack", course="python", age=22, country="Korean")

registriation info....
Alex 22 CN python
registriation info....
jack 22 Korean python
# 非固定参数 一*打包代入元组，二*打包代入字典
# 如果是列表传递，需要加*[],这样就不会出现([])
def func(name, *args, **kwargs):
    print(name, args, kwargs)


d = {"jack": "school"}
func("alex", 22, 33, 44, 55, **d)

alex (22, 33, 44, 55) {'jack': 'school'}
# 返回值
# return终止函数，返回元组，一个值
def stu_register(name,age,course):
    print(name,age,course)
    if age > 22:
        return False
    else:
        return True
# 匿名函数
func = lambda x,y:x*y
func(3, 8)
data = list(range(10))
print(data)
for index, i in enumerate(data):
    data[index] = i*i
def f2(n):
    return n*n
print(list(map(lambda x:x*x, data)))

# 高阶函数
# calc(func) return func f = func
def func(x, y):
    return x + y
def calc(x):
    return x
f = calc(func)
print(f(5, 9))
# 递归函数
def calc(n):
    n = int(n/2)
    print(n)
    if n > 0:
        calc(n)
    print(n)
    
def calc(n, count):
    if count < 5
        return calc(n / 2, count + 1) # 返回最后一个值给n
    else:
        return n
calc(188, 1)
print('res', res)
